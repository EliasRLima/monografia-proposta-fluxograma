Um algoritmo é uma sequência de passos finitos com instruções bem definidas que tem como objetivo apresentar a solução de algum problema. 

Por exemplo, O problema da torre de Hanói. Dado três hastes ( A , B e C ) com inicialmente N discos de tamanhos distintos empilhados na haste A e o objetivo do problema é que os discos sejam movidos um por vez de haste sem que nenhum disco maior seja colocado sobre outro menor e no final a pilha seja recriada nas hastes B ou C.

Para um unico disco, basta um movimento: [Move A, B]
Para dois discos, serão precisos 3 movimentos: [Move A, B] [Move A, C] [Move B, C]
Para três discos, serão necessários 7 movimentos: [Move A, B] [Move A, C] [Move B, C] [Move A, B] [Move C, A] [Move C, B] [Move A, B]
Ou seja, o número de discos e a quantidade de movimentos necessários são diretamente proporcionais. 

Neste exemplo o algoritmo é a indicação de movimentos para resolver uma torre de Hanói, para o estudo de algoritmos em computação o estudante vai bem mais além do que somente buscar o resultado. É lhe ensinado sobre a complexidade dos algoritmos e a busca pela sua máxima eficiencia, sendo esses dois pontos fundamentais para o estudante avançar no estudo de algoritmos. 

A complexidade dos algoritmos, no nível mais basíco, pode ser medida pelo espaço e tempo. O espaço é considerado como a quantidade de variaveis que o sistema deve alocar na memória, de inicio não é considerado o tipo da variavel, nem o tamanho da mesma e por isso todas as variaveis acrescentam 1 na complexidade de espaço. O tempo, por sua vez, não é a medida cronologica que o algoritmo leva para ser executado, mas sim a quantidade de passos que o mesmo necessita para entregar o resultado. Vale lembrar que o tempo cronologico de execução é um ponto importante, mas isso não é considerado no ensino de algoritmo mas sim ponto de atenção em outras disciplinas. 

Com base nisso, é esperado do estudante que nos seus próximos algoritmos o mesmo busque sempre uma boa eficiencia para as suas soluções.
